#include "main.h"
#include"boss.h"

Boss::Boss(float x,float y,float z,color_t color) {



    this->position = glm::vec3(x, y, z);
    this->rotation =0;
    this->color = color;

    GLfloat legs[] = {
            -0.2 , 0.2 , 0.8 ,
            -0.2 , 0.2 , 1.2 ,
            -1.6 , 0.2 , 0.8 ,

            -0.2 , 0.2 , 1.2 ,
            -1.6 , 0.2 , 0.8 ,
            -1.6 , 0.2 , 1.2 ,

            -0.2 , 0.2 , 1.2,
            -0.2 , -0.2 , 1.2 ,
            -1.6 , 0.2 , 1.2 ,

            -0.2 , -0.2 , 1.2 ,
            -1.6 , 0.2 , 1.2 ,
            -1.6 , -0.2 , 1.2 ,

            //a
            -0.2 , 0.2 , 0.8,
            -0.2 , -0.2 , 0.8 ,
            -1.6 , 0.2 , 0.8 ,

            -0.2 , -0.2 , 0.8 ,
            -1.6 , 0.2 , 0.8 ,
            -1.6 , -0.2 , 0.8 ,
            //a
            -0.2 , -0.2 , 0.8 ,
            -0.2 , -0.2 , 1.2 ,
            -1.6 , -0.2 , 0.8 ,

            -0.2 , -0.2 , 1.2 ,
            -1.6 , -0.2 , 0.8 ,
            -1.6 , -0.2 , 1.2 ,


            //aaaa
            -0.2 , 0.2 , -0.8 ,
            -0.2 , 0.2 , -1.2 ,
            -1.6 , 0.2 , -0.8 ,

            -0.2 , 0.2 , -1.2 ,
            -1.6 , 0.2 , -0.8 ,
            -1.6 , 0.2 , -1.2 ,

            -0.2 , 0.2 , -1.2,
            -0.2 , -0.2 , -1.2 ,
            -1.6 , 0.2 , -1.2 ,

            -0.2 , -0.2 , -1.2 ,
            -1.6 , 0.2 ,-1.2 ,
            -1.6 , -0.2 ,-1.2 ,

            //a
            -0.2 , 0.2 , -0.8,
            -0.2 , -0.2 , -0.8 ,
            -1.6 , 0.2 ,-0.8 ,

            -0.2 , -0.2 , -0.8 ,
            -1.6 , 0.2 , -0.8 ,
            -1.6 , -0.2 , -0.8 ,
            //a
            -0.2 , -0.2 , -0.8 ,
            -0.2 , -0.2 , -1.2 ,
            -1.6 , -0.2 , -0.8 ,

            -0.2 , -0.2 , -1.2 ,
            -1.6 , -0.2 , -0.8 ,
            -1.6 , -0.2 , -1.2 ,

    };

    this->leg = create3DObject(GL_TRIANGLES, 48, legs, COLOR_BLACK, GL_FILL);

    GLfloat bodies[] = {
            -1.6 , 2 , -2 ,
            -1.6 , 2 , 2 ,
            -1.6 , -2 , -2 ,

            -1.6 , -2 , 2 ,
            -1.6 , 2 , 2 ,
            -1.6 , -2 , -2 ,

            -3.2 , 2 , -2 ,
            -3.2 , 2 , 2 ,
            -3.2 , -2 , -2 ,

            -3.2 , -2 , 2 ,
            -3.2 , 2 , 2 ,
            -3.2 , -2 , -2 ,

            // rt
            -1.6 , 2 , 2 ,
            -1.6 , -2 , 2 ,
            -3.2 , 2 , 2 ,

            -3.2 , -2 , 2 ,
            -1.6 , -2 , 2 ,
            -3.2 , 2 , 2 ,
            //brt
            -1.6 , 2 , -2 ,
            -1.6 , -2 , -2 ,
            -3.2 , 2 , -2 ,

            -3.2 , -2 , -2 ,
            -1.6 , -2 , -2 ,
            -3.2 , 2 , -2 ,

            //frnt

            -1.6 , 2 , -2 ,
            -1.6 , 2 , 2 ,
            -3.2 , 2 , -2 ,

            -1.6 , 2 , 2 ,
            -3.2 , 2 , -2 ,
            -3.2 , 2 , 2 ,

            //bfrnt
            -1.6 , -2 , -2 ,
            -1.6 , -2 , 2 ,
            -3.2 , -2 , -2 ,

            -1.6 , -2 , 2 ,
            -3.2 , -2 , -2 ,
            -3.2 , -2 , 2 ,


    };

    this->body = create3DObject(GL_TRIANGLES, 36, bodies,this->color, GL_FILL);

    GLfloat heads[] = {
            -3.2 , 1.2 , -1.2 ,
            -3.2 , 1.2 , 1.2 ,
            -3.2 , -1.2 , -1.2 ,

            -3.2 , -1.2 , 1.2 ,
            -3.2 , 1.2 , 1.2 ,
            -3.2 , -1.2 , -1.2 ,

            -4.4 , 1.2 , -1.2 ,
            -4.4 , 1.2 , 1.2 ,
            -4.4 , -1.2 , -1.2 ,

            -4.4 , -1.2 , 1.2 ,
            -4.4 , 1.2 , 1.2 ,
            -4.4 , -1.2 , -1.2 ,

            // rt
            -3.2 , 1.2 , 1.2 ,
            -3.2 , -1.2 , 1.2 ,
            -4.4 , 1.2 , 1.2 ,

            -4.4 , -1.2 , 1.2 ,
            -3.2 , -1.2 , 1.2 ,
            -4.4 , 1.2 , 1.2 ,
            //brt
            -3.2 , 1.2 , -1.2 ,
            -3.2 , -1.2 , -1.2 ,
            -4.4 , 1.2 , -1.2 ,

            -4.4 , -1.2 , -1.2 ,
            -3.2 , -1.2 , -1.2 ,
            -4.4 , 1.2 , -1.2 ,

            //frnt

            -3.2 , 1.2 , -1.2 ,
            -3.2 , 1.2 , 1.2 ,
            -4.4 , 1.2 , -1.2 ,

            -3.2 , 1.2 , 1.2 ,
            -4.4 , 1.2 , -1.2,
            -4.4 , 1.2 , 1.2 ,

            //bfrnt
            -3.2 , -1.2 , -1.2 ,
            -3.2 , -1.2 , 1.2 ,
            -4.4 , -1.2 , -1.2 ,

            -3.2 , -1.2 , 1.2 ,
            -4.4 , -1.2 , -1.2,
            -4.4 , -1.2 , 1.2 ,

    };

    this->head = create3DObject(GL_TRIANGLES, 36, heads, COLOR_BLACK, GL_FILL);


    GLfloat eyes[] = {
            -4.0 , -1.21, 0.40,
            -4.0 , -1.21 , 0.80,
            -3.7 , -1.21 , 0.6,

            -4.0, -1.21, -0.40,
            -4.0, -1.21 , -0.80,
            -3.7 , -1.21 , -0.6,
    };
    this->eye = create3DObject(GL_TRIANGLES, 6, eyes, COLOR_RED, GL_FILL);

    GLfloat mouths[] = {
            -3.5 , -1.21, 0.40,
            -3.5 , -1.21 , -0.40,
            -3.4 , -1.21 , 0.4,

            -3.5, -1.21, -0.40,
            -3.4, -1.21 , -0.40,
            -3.4 , -1.21 , 0.4,
    };
    this->mouth = create3DObject(GL_TRIANGLES, 6, mouths, COLOR_RED, GL_FILL);



};

void Boss::draw(glm::mat4 VP) {
    Matrices.model = glm::mat4(1.0f);
    glm::mat4 translate = glm::translate(this->position);    // glTranslatef
    glm::mat4 rotate = glm::rotate((float) (this->rotation * M_PI / 180.0f), glm::vec3(1, 0, 0));
    // No need as coords centered at 0, 0, 0 of cube arouund which we waant to rotate
    // rotate          = rotate * glm::translate(glm::vec3(0, -1.2, 0));
    Matrices.model *= (translate * rotate);
    glm::mat4 MVP = VP * Matrices.model;
    glUniformMatrix4fv(Matrices.MatrixID, 1, GL_FALSE, &MVP[0][0]);
    draw3DObject(this->leg);
    draw3DObject(this->body);
    draw3DObject(this->head);
    draw3DObject(this->eye);
    draw3DObject(this->mouth);
}
